name: Deploy Loumo API

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: npm ci
        working-directory: ./loumo-api
      - name: Run linter
        run: npm run lint
        working-directory: ./loumo-api

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: npm ci
        working-directory: ./loumo-api
      - name: Run tests
        run: npm test
        working-directory: ./loumo-api

  build:
    name: Build API
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Install deps
        run: npm ci
        working-directory: ./loumo-api
      - name: Build project
        run: npm run build
        working-directory: ./loumo-api

  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}

      - name: Add VPS to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.PROD_VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Create release folder on VPS
        run: |
          TIMESTAMP=$(date +"%Y%m%d-%H%M")
          echo "RELEASE_DIR=~/deployments/loumo-app/releases/$TIMESTAMP" >> $GITHUB_ENV
          echo "DEPLOY_TIME=$TIMESTAMP" >> $GITHUB_ENV

      - name: Deploy to VPS
        run: |
          ssh ${{ secrets.PROD_VPS_USER }}@${{ secrets.PROD_VPS_HOST }} 'bash -s' << EOF
             set -euo pipefail

             TIMESTAMP=${{ env.DEPLOY_TIME }}
             RELEASE_DIR=~/deployments/loumo-app/releases/$TIMESTAMP

             mkdir -p $RELEASE_DIR
             cd $RELEASE_DIR

             git clone https://github.com/${{ github.repository }} temp-clone --depth 1
             mv temp-clone/* temp-clone/.* . 2>/dev/null || true
             rm -rf temp-clone

             cp ~/deployments/loumo-app/shared/.env .env
             export DOCKER_BUILDKIT=0

             # Remove any containers that might conflict
             docker rm -f mongo loumo 2>/dev/null || true

             docker compose -f docker-compose-vps.yml --env-file .env build
             docker compose -f docker-compose-vps.yml --env-file .env up -d

             # Health check loop
             for i in {1..10}; do
               if curl --fail http://localhost:5000/health; then
                 echo "‚úÖ Health check passed"
                 break
               fi
               echo "‚è≥ Waiting for app to be ready... ($i/10)"
               sleep 6
             done

             if curl --fail http://localhost:5000/health; then
               ln -sfn $RELEASE_DIR ~/deployments/loumo-app/current
               echo "‚úÖ Deployment successful"
             else
               echo "‚ùå Health check failed, rolling back"
               if [ -L ~/deployments/loumo-app/current ]; then
                 PREV=$(readlink ~/deployments/loumo-app/current)
                 docker compose -f $RELEASE_DIR/docker-compose-vps.yml --env-file .env down || true
                 ln -sfn $PREV ~/deployments/loumo-app/current
                 docker compose -f $PREV/docker-compose-vps.yml --env-file $PREV/.env up -d
               else
                 echo "‚ö†Ô∏è No previous release to roll back to"
               fi
               exit 1
             fi

             echo "üéØ Deployment complete for release $TIMESTAMP"
             exit 0
           EOF

      - name: Confirm remote session is done
        run: echo "üß† SSH session completed cleanly"
